<?xml version="1.0" encoding="UTF-8"?>

<mule
	xmlns:json-logger="http://www.mulesoft.org/schema/mule/json-logger"
	xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/json-logger http://www.mulesoft.org/schema/mule/json-logger/current/mule-json-logger.xsd">
	<flow name="batch-api-load-data" doc:id="d6000e51-9289-4848-a704-af68d30d70c0">
		<vm:listener queueName="${batch.execution.queue}" doc:name="Listener" doc:id="95639fdb-138e-4486-8ffd-e9da04320980" config-ref="VM_Config" />
		<set-variable value="#[dw::util::Timer::currentMilliseconds()]" doc:name="Set Start Time in Millis" doc:id="f67c51e1-aff2-4bca-940d-2d37fe515b10" variableName="startTime" />
		<logger level="INFO" doc:name="Info Log" doc:id="7a9dcb1f-bb8f-473e-8ca1-0922449be3ca" message='#["Initializing batch " ++ now()]' category="FLOW" />
		<flow-ref doc:name="Output File Util" doc:id="18dbc360-d1fb-4681-b135-a1363813f2b8" name="file-util"/>
		<http:request method="GET" doc:name="Retrieve Data from Source" doc:id="9d61c371-76fe-4eec-aef4-77a6f3487437" outputMimeType="application/csv; ignoreemptyline=true" config-ref="HTTP_Request_configuration" path="${batch.data.path}"/>
		<set-payload value="#[output application/json --- payload]" doc:name="Set CSV To Json" doc:id="7d184019-5840-4919-8a0e-b1463660f795" />
		<batch:job jobName="batch-api-Batch_Job" doc:id="c9e54ee1-369a-4f36-a73f-0cc670689141" maxFailedRecords="-1" jobInstanceId="#['Job From ' ++ now() as String {format: 'dd/MM/yy hh:mm:ss'}]">
			<batch:process-records>
				<batch:step name="Process_Only_Known" doc:id="8daf6b27-11a3-47bc-a468-d4d47a3dcbb4" acceptExpression="#[payload.'Local Authority' != 'Unknown']">
					<flow-ref doc:name="batch-api-data-transformation" doc:id="cfc5cd9c-0cc1-4676-b782-0cf727e27d7f" name="batch-api-data-transformation" target="step_1" />
				</batch:step>
				<batch:step name="Raise_Data_Error" doc:id="a7572a1d-3fb1-427e-b824-21a335b22165" acceptExpression="#[payload.'Local Authority' == 'Unknown']">
					<!-- <json-logger:logger doc:name="Log Corrupt Data" doc:id="4a9eb025-1b06-4e1a-91a0-528f39d55611" config-ref="JSON_Logger_Debug_Config" message="Found Unknown Location, raise data error" tracePoint="FLOW" priority="ERROR"/> -->
					<raise-error doc:name="Raise error" doc:id="d3cf61a2-fadb-45e2-a1fa-ae4d2110d6f0" type="APP:CUSTOM" description="Fail for Unknown" />
				</batch:step>
				<batch:step name="Process_Errors" doc:id="a4e6c931-f874-4de8-bdb5-7281014cdbf9" acceptPolicy="ONLY_FAILURES"> 
					<flow-ref doc:name="process-failures" doc:id="87d76d36-d251-4661-9354-c393c28ea73d" name="process-failures" />
				</batch:step>
			  <batch:step name="Batch_Step" doc:id="36f4b8fc-62f3-4598-a7ea-2f2b2a622f7f" >
					<ee:transform doc:name="Convert to CSV" doc:id="a6fd13db-bf2c-4481-bdef-df65019ac9e3">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output text/csv header=false
---
payload default ""]]></ee:set-payload>
						</ee:message>
					</ee:transform>
				 <file:write doc:name="Write to Target" doc:id="7ca2b6fc-d3dd-4f0d-bf19-422f5c5cd89d" config-ref="File_Config" path="#[p('output-file.path')++ p('output-file.name')]" mode="APPEND"/> 
				</batch:step> 
			</batch:process-records>
			<batch:on-complete>
				<os:store doc:name="Update Job Status To complete" doc:id="bcd1a3e2-33c1-4f77-ab11-9575fd0f5915" 
				               key="${batch.status.key}" objectStore="Batch_Error_Object_store">
					<os:value><![CDATA[#[transformations::common::setBatchStatusToComplete()]]]></os:value>
				</os:store>
				<logger level="INFO" doc:name="Info Log" doc:id="22f2819d-838d-4a77-b6ed-29bb3b41e8d2" message='#["Total Time Taken: " ++  (dw::util::Timer::currentMilliseconds() - vars.startTime) as String]' category="FLOW" />
			</batch:on-complete>
		</batch:job>
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="9dd42e20-367a-4be4-8a74-ca289f789144" >
				<logger level="ERROR" doc:name="Info Log" doc:id="5fc3be21-727e-426b-94aa-1fe3479adcfe" message='#[payload]' category="FLOW" />
				<os:store doc:name="Update Job Status To failed" doc:id="267cb205-0078-4a2a-98f3-9a1e9fcee737" key="${batch.status.key}" objectStore="Batch_Error_Object_store">
			<os:value><![CDATA[#[transformations::common::setBatchStatusToFailed()]]]></os:value>
		</os:store>
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="batch-api-implementation-main"
		doc:id="2e7c51a3-fc4b-47c1-a27c-d1a95f3ff181">
		<flow-ref doc:name="check-batch-status"
			doc:id="a6c3bfae-0f8f-430c-a2a6-ef45c8432d00"
			name="check-batch-status" />
		<validation:is-false
			doc:id="863067cc-c81c-4875-815d-99de2e1c9f6f"
			doc:name="Is Batch Running?"
			expression="#[(payload.status == Mule::p('batch.status.running'))]"
			message="An existing job is running. Please try again later" />
		<os:store doc:name="Update Job Status To Running" doc:id="4c679d49-172d-4b10-94d0-92c844817ad1" key="${batch.status.key}" objectStore="Batch_Error_Object_store">
			<os:value><![CDATA[#[transformations::common::setBatchStatusToRunning()]]]></os:value>
		</os:store>
		<vm:publish doc:name="Publish - Batch Execution Queue" doc:id="e660039c-0667-4dbd-99e9-c00cf69ef80d" config-ref="VM_Config" queueName="${batch.execution.queue}" sendCorrelationId="ALWAYS"/>
		<ee:transform doc:name="Response"
			doc:id="2a750db6-740d-49b8-976c-bacc5080b7ac">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	message: "Batch Execution started "
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="batch-api-implementationFlow" doc:id="293407f3-2122-4c61-b6d8-e6e5ab75b17e" >
		<scheduler doc:name="Scheduler" doc:id="9d441947-5f13-40b3-ae76-4e7d32673fd1" >
			<scheduling-strategy >
				<fixed-frequency frequency="${batch.scheduler.frequency}" timeUnit="MINUTES"/>
			</scheduling-strategy>
		</scheduler>
		<flow-ref doc:name="batch-api-implementation-main" doc:id="fa3d48b7-ada7-4dea-8d84-f311221fb871" name="batch-api-implementation-main"/>
	</flow>
	<sub-flow name="batch-api-data-transformation" doc:id="72cfb997-ad2f-4569-b1dc-8bf328bfdaf8" >
		<ee:transform doc:name="Data Transformation" doc:id="e4d49405-2839-4dfe-a49d-cfcef8f8dc9d" >
			<ee:message >
				<ee:set-payload resource="transformations/data-transformation.dwl" />
			</ee:message>
			<ee:variables >
			</ee:variables>
		</ee:transform>
	
	</sub-flow>
	<sub-flow name="retrieve-failures" doc:id="e71f0abc-eb3b-44fd-814e-66b9394e892c" >
		<os:retrieve-all doc:name="Retrieve all" doc:id="6be25233-083c-49d5-8620-3aaefbb25c71" objectStore="Batch_Error_Object_store" />
		<ee:transform doc:name="Map Values" doc:id="57923c5f-90e9-4596-a782-68de0466c255" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
valuesOf(payload)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="8cf61a9b-d83c-4b24-9047-07b03de5f241" message="#[payload]" />
	</sub-flow>
	<sub-flow name="process-failures" doc:id="ecbf8610-4b92-48f1-a86b-a86dbd4a487e" >
		<ee:transform doc:name="JSON to CSV" doc:id="a3f5ef82-30ba-4787-acb0-9abe24f6dd6b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output text/csv  skipNullOn="everywhere"
---
payload default ""]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<os:store doc:name="Store" doc:id="ccb1674a-8eac-4913-90c1-303e30699a7f" key="#[now()]" objectStore="Batch_Error_Object_store"/>
	</sub-flow>

	
	<sub-flow name="batch-api-implementation-get-data"
		doc:id="29f69eb1-884e-47d8-87a8-5319be952f2c">
		<ee:transform doc:name="Get Data"
			doc:id="546bc408-ec36-4c91-9581-99f076f84a52">
			<ee:message>
				<ee:set-payload resource="transformations/getData.dwl" />
			</ee:message>
		</ee:transform>
	</sub-flow>
	
	<sub-flow name="check-batch-status" doc:id="f90e4006-4cec-4f85-b190-7c70415ed3cf" >
		<os:retrieve doc:name="Retrieve Batch Status" doc:id="d412e589-4771-46ca-925b-4f71fb9dac9f" key="${batch.status.key}" objectStore="Batch_Error_Object_store">
			<os:default-value ><![CDATA[#[{
	"status": "",
	"lastRun": ""
}]]]></os:default-value>
		</os:retrieve>
		<logger level="INFO" doc:name="Info Log" doc:id="5ea74f21-ea97-4646-befd-ce5e14d631e0" message='Batch Status #[payload]' category="FLOW" />
	</sub-flow>
	<sub-flow name="clear-batch-status" doc:id="28096d15-2291-4796-a2ab-6a71fa73e344" >
		<try doc:name="Try" doc:id="ce319edc-1a05-4130-98ce-6037ba4bd76f" >
			<os:remove doc:name="Remove Batch Status" doc:id="a951a61a-9546-4ced-8466-9816484ab305" key="${batch.status.key}" objectStore="Batch_Error_Object_store" />
			<error-handler >
				<on-error-continue enableNotifications="false" logException="false" doc:name="On Error Continue" doc:id="b008de88-5917-4aa0-a38e-e6cc65c2c6d1" type="OS:KEY_NOT_FOUND">
					<logger level="ERROR" doc:name="Log No Key Found" doc:id="79af0a17-1cdd-48c9-a1f8-b78f615d074a" message="No Batch status found to clear" category="EXCEPTION" />
				</on-error-continue>
			</error-handler>
		</try>
		<set-payload value='#[output application/json --- {message: "Job status cleared"}]' doc:name="Set Payload" doc:id="c10aefab-1763-4d1a-9f9c-0f03c1f871b7" />
	</sub-flow>
	<sub-flow name="file-util" doc:id="f5a779c4-3614-4df4-ab9e-44edbec2f912" >
		<file:delete doc:name="Delete Output File" doc:id="1cc2366e-9d6a-43af-9768-cffe25788ac2" config-ref="File_Config" path="#[p('output-file.path')++ p('output-file.name')]"/>
		<file:write doc:name="Write Header" doc:id="e8df02be-1bd1-4326-9ce5-22b55cbddf62" config-ref="File_Config" path="#[p('output-file.path')++ p('output-file.name')]" mode="CREATE_NEW">
			<file:content ><![CDATA[#[p('putput-file.header') default ""]]]></file:content>
		</file:write>
	</sub-flow>
	
</mule>
